package net.hdt.neutronia.properties;

import net.minecraft.block.*;
import net.minecraft.block.properties.PropertyBool;
import net.minecraft.block.properties.PropertyDirection;
import net.minecraft.block.properties.PropertyEnum;
import net.minecraft.block.properties.PropertyInteger;
import net.minecraft.util.EnumFacing;

import java.util.Arrays;

public class Properties {
    public static final PropertyBool ATTACHED = PropertyBool.create("attached");
    public static final PropertyBool CONDITIONAL = PropertyBool.create("conditional");
    public static final PropertyBool DISARMED = PropertyBool.create("disarmed");
    public static final PropertyBool DRAG = PropertyBool.create("drag");
    public static final PropertyBool ENABLED = PropertyBool.create("enabled");
    public static final PropertyBool EXTENDED = PropertyBool.create("extended");
    public static final PropertyBool EYE = PropertyBool.create("eye");
    public static final PropertyBool FALLING = PropertyBool.create("falling");
    public static final PropertyBool HAS_BOTTLE_0 = PropertyBool.create("has_bottle_0");
    public static final PropertyBool HAS_BOTTLE_1 = PropertyBool.create("has_bottle_1");
    public static final PropertyBool HAS_BOTTLE_2 = PropertyBool.create("has_bottle_2");
    public static final PropertyBool HAS_RECORD = PropertyBool.create("has_record");
    public static final PropertyBool INVERTED = PropertyBool.create("inverted");
    public static final PropertyBool IN_WALL = PropertyBool.create("in_wall");
    public static final PropertyBool LIT = PropertyBool.create("lit");
    public static final PropertyBool LOCKED = PropertyBool.create("locked");
    public static final PropertyBool OCCUPIED = PropertyBool.create("occupied");
    public static final PropertyBool OPEN = PropertyBool.create("open");
    public static final PropertyBool PERSISTENT = PropertyBool.create("persistent");
    public static final PropertyBool POWERED = PropertyBool.create("powered");
    public static final PropertyBool SHORT = PropertyBool.create("short");
    public static final PropertyBool SNOWY = PropertyBool.create("snowy");
    public static final PropertyBool TRIGGERED = PropertyBool.create("triggered");
    public static final PropertyBool WATERLOGGED = PropertyBool.create("waterlogged");
    public static final PropertyEnum<EnumFacing.Axis> HORIZONTAL_AXIS;
    public static final PropertyEnum<EnumFacing.Axis> AXIS;
    public static final PropertyBool UP;
    public static final PropertyBool DOWN;
    public static final PropertyBool NORTH;
    public static final PropertyBool EAST;
    public static final PropertyBool SOUTH;
    public static final PropertyBool WEST;
    public static final PropertyDirection ALL_FACING;
    public static final PropertyDirection ALL_BUT_UP_FACING;
    public static final PropertyDirection HORIZONTAL_FACING;
    public static final PropertyEnum<BlockTrapDoor.DoorHalf> MULTIBLOCK_HALF;
    public static final PropertyEnum<BlockSlab.EnumBlockHalf> HALF_OF_BLOCK;
    public static final PropertyEnum<BlockRailBase.EnumRailDirection> RAIL_SHAPE;
    public static final PropertyEnum<BlockRailBase.EnumRailDirection> RAIL_SHAPE_SINGLE_AXIS;
    public static final PropertyInteger AGE_1;
    public static final PropertyInteger AGE_2;
    public static final PropertyInteger AGE_3;
    public static final PropertyInteger AGE_4;
    public static final PropertyInteger AGE_5;
    public static final PropertyInteger AGE_6;
    public static final PropertyInteger BITES;
    public static final PropertyInteger DELAY;
    public static final PropertyInteger DISTANCE;
    public static final PropertyInteger EGGS;
    public static final PropertyInteger HATCH;
    public static final PropertyInteger LAYERS;
    public static final PropertyInteger LEVEL_1;
    public static final PropertyInteger LEVEL_2;
    public static final PropertyInteger LEVEL_3;
    public static final PropertyInteger MOISTURE;
    public static final PropertyInteger NOTE;
    public static final PropertyInteger PICKLES;
    public static final PropertyInteger POWER;
    public static final PropertyInteger STAGE;
    public static final PropertyInteger ROTATION;
    public static final PropertyEnum<BlockBed.EnumPartType> PART;
    public static final PropertyEnum<BlockDoor.EnumHingePosition> HINGE;
    public static final PropertyEnum<BlockSlab.EnumBlockHalf> TYPE_3;
    public static final PropertyEnum<BlockStairs.EnumShape> SHAPE;

    static {
        HORIZONTAL_AXIS = PropertyEnum.create("axis", EnumFacing.Axis.class, EnumFacing.Axis.X, EnumFacing.Axis.Z);
        AXIS = PropertyEnum.create("axis", EnumFacing.Axis.class);
        UP = PropertyBool.create("up");
        DOWN = PropertyBool.create("down");
        NORTH = PropertyBool.create("north");
        EAST = PropertyBool.create("east");
        SOUTH = PropertyBool.create("south");
        WEST = PropertyBool.create("west");
        ALL_FACING = PropertyDirection.create("facing", Arrays.asList(EnumFacing.NORTH, EnumFacing.EAST, EnumFacing.SOUTH, EnumFacing.WEST, EnumFacing.UP, EnumFacing.DOWN));
        ALL_BUT_UP_FACING = PropertyDirection.create("facing", (aFacing) -> aFacing != EnumFacing.UP);
        HORIZONTAL_FACING = PropertyDirection.create("facing", EnumFacing.Plane.HORIZONTAL);
        MULTIBLOCK_HALF = PropertyEnum.create("half", BlockTrapDoor.DoorHalf.class);
        HALF_OF_BLOCK = PropertyEnum.create("half", BlockSlab.EnumBlockHalf.class);
        RAIL_SHAPE = PropertyEnum.create("shape", BlockRail.EnumRailDirection.class);
        RAIL_SHAPE_SINGLE_AXIS = PropertyEnum.create("shape", BlockRail.EnumRailDirection.class, (aRailShape) -> aRailShape != BlockRail.EnumRailDirection.NORTH_EAST && aRailShape != BlockRail.EnumRailDirection.NORTH_WEST && aRailShape != BlockRail.EnumRailDirection.SOUTH_EAST && aRailShape != BlockRail.EnumRailDirection.SOUTH_WEST);
        AGE_1 = PropertyInteger.create("age", 0, 2);
        AGE_2 = PropertyInteger.create("age", 0, 3);
        AGE_3 = PropertyInteger.create("age", 0, 5);
        AGE_4 = PropertyInteger.create("age", 0, 7);
        AGE_5 = PropertyInteger.create("age", 0, 15);
        AGE_6 = PropertyInteger.create("age", 0, 25);
        BITES = PropertyInteger.create("bites", 0, 6);
        DELAY = PropertyInteger.create("delay", 1, 4);
        DISTANCE = PropertyInteger.create("distance", 1, 7);
        EGGS = PropertyInteger.create("eggs", 1, 4);
        HATCH = PropertyInteger.create("hatch", 0, 2);
        LAYERS = PropertyInteger.create("layers", 1, 8);
        LEVEL_1 = PropertyInteger.create("level", 0, 3);
        LEVEL_2 = PropertyInteger.create("level", 1, 8);
        LEVEL_3 = PropertyInteger.create("level", 0, 15);
        MOISTURE = PropertyInteger.create("moisture", 0, 7);
        NOTE = PropertyInteger.create("note", 0, 24);
        PICKLES = PropertyInteger.create("pickles", 1, 4);
        POWER = PropertyInteger.create("power", 0, 15);
        STAGE = PropertyInteger.create("stage", 0, 1);
        ROTATION = PropertyInteger.create("rotation", 0, 15);
        PART = PropertyEnum.create("part", BlockBed.EnumPartType.class);
        HINGE = PropertyEnum.create("hinge", BlockDoor.EnumHingePosition.class);
        TYPE_3 = PropertyEnum.create("type", BlockSlab.EnumBlockHalf.class);
        SHAPE = PropertyEnum.create("shape", BlockStairs.EnumShape.class);
    }
}
