buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "http://repo.spongepowered.org/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle.forge'

def versionPropsFile = file('version.properties')
def build

/*Setting default value for versionBuild which is the last incremented value stored in the file */
if (versionPropsFile.canRead()) {
    Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(versionPropsFile))
    build = versionProps['BUILD'].toInteger()
} else {
    throw new FileNotFoundException("Could not read version.properties!")
}


/*Wrapping inside a method avoids auto incrementing on every gradle task run. Now it runs only when we build apk*/
ext.autoIncrementBuildNumber = {

    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        build = versionProps['BUILD'].toInteger() + 1
        versionProps['BUILD'] = build.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }
}

version= "0.4.$build"
group= "net.hdt.neutronia"
archivesBaseName = "${mod_name}"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    mappings = "${mcp_mappings}"
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

repositories {
    mavenCentral()
    jcenter()
    maven { url = "http://chickenbones.net/maven" }
    maven { url = "http://dvs1.progwml6.com/files/maven" }
    maven { url = "http://tehnut.info/maven" }
    maven { url = "http://maven.tterrag.com" }
    maven { url = "http://maven.covers1624.net" }
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile "mezz.jei:jei_${mc_version}:${jei_version}:api"
    compile "mcp.mobius.waila:Hwyla:${hwyla_version}:api"
    runtime "mezz.jei:jei_${mc_version}:${jei_version}"
    runtime "mcp.mobius.waila:Hwyla:${hwyla_version}"
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
    classifier = 'universal'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task srcJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives deobfJar
    archives srcJar
}